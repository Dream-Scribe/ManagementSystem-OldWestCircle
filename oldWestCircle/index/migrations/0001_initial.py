# Generated by Django 4.2 on 2023-05-29 02:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('activityid', models.BigAutoField(db_column='activityID', primary_key=True, serialize=False)),
                ('activitycontent', models.CharField(blank=True, db_column='activityContent', max_length=100, null=True)),
                ('activitystarttime', models.DateTimeField(blank=True, db_column='activityStartTime', null=True)),
                ('activityendtime', models.DateTimeField(blank=True, db_column='activityEndTime', null=True)),
                ('activityplace', models.CharField(blank=True, db_column='activityPlace', max_length=30, null=True)),
            ],
            options={
                'db_table': 'activity',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('adminid', models.BigIntegerField(db_column='adminID', primary_key=True, serialize=False)),
                ('adminpd', models.CharField(db_column='adminPd', max_length=20)),
                ('adminname', models.CharField(blank=True, db_column='adminName', max_length=20, null=True)),
            ],
            options={
                'db_table': 'admin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('announceid', models.BigAutoField(db_column='announceID', primary_key=True, serialize=False)),
                ('announcecontent', models.CharField(blank=True, db_column='announceContent', max_length=100, null=True)),
                ('announcepublishtime', models.DateTimeField(blank=True, db_column='announcePublishTime', null=True)),
            ],
            options={
                'db_table': 'announcement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('classid', models.BigAutoField(db_column='classID', primary_key=True, serialize=False)),
                ('classstudentnum', models.IntegerField(db_column='classStudentNum')),
                ('classdate', models.IntegerField(blank=True, db_column='classDate', null=True)),
                ('classtime', models.CharField(blank=True, db_column='classTime', max_length=20, null=True)),
            ],
            options={
                'db_table': 'class',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('courseid', models.BigAutoField(db_column='courseID', primary_key=True, serialize=False)),
                ('coursetype', models.IntegerField(db_column='courseType')),
                ('coursestarttime', models.DateTimeField(blank=True, db_column='courseStartTime', null=True)),
                ('courseendtime', models.DateTimeField(blank=True, db_column='courseEndTime', null=True)),
                ('courseregisternum', models.IntegerField(blank=True, db_column='courseRegisterNum', null=True)),
                ('coursefavordeg', models.DecimalField(blank=True, db_column='courseFavorDeg', decimal_places=1, max_digits=3, null=True)),
                ('courseintro', models.CharField(blank=True, db_column='courseIntro', max_length=100, null=True)),
                ('coursestate', models.CharField(blank=True, db_column='courseState', max_length=10, null=True)),
                ('coursename', models.CharField(db_column='courseName', max_length=20)),
            ],
            options={
                'db_table': 'course',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('homeworkid', models.BigAutoField(db_column='homeworkID', primary_key=True, serialize=False)),
                ('homeworkstarttime', models.DateTimeField(db_column='homeworkStartTime')),
                ('homeworkendtime', models.DateTimeField(db_column='homeworkEndTime')),
                ('homeworkcontent', models.CharField(blank=True, db_column='homeworkContent', max_length=100, null=True)),
            ],
            options={
                'db_table': 'homework',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentid', models.BigIntegerField(db_column='studentID', primary_key=True, serialize=False)),
                ('registertime', models.DateTimeField(blank=True, db_column='registerTime', null=True)),
                ('nickname', models.CharField(blank=True, db_column='nickName', max_length=20, null=True)),
                ('realname', models.CharField(blank=True, db_column='realName', max_length=20, null=True)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=15)),
                ('userpd', models.CharField(db_column='userPD', max_length=20)),
            ],
            options={
                'db_table': 'student',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacherid', models.BigIntegerField(db_column='teacherID', primary_key=True, serialize=False)),
                ('registertime', models.DateTimeField(blank=True, db_column='registerTime', null=True)),
                ('nickname', models.CharField(blank=True, db_column='nickName', max_length=20, null=True)),
                ('realname', models.CharField(blank=True, db_column='realName', max_length=20, null=True)),
                ('phonenumber', models.CharField(db_column='phoneNumber', max_length=15)),
                ('userpd', models.CharField(db_column='userPD', max_length=20)),
                ('teacherintro', models.CharField(blank=True, db_column='teacherIntro', max_length=100, null=True)),
                ('teacherfield', models.IntegerField(db_column='teacherField')),
                ('teacherwelcomedeg', models.DecimalField(blank=True, db_column='teacherWelcomeDeg', decimal_places=1, max_digits=3, null=True)),
                ('teacherclasshour', models.IntegerField(blank=True, db_column='teacherClassHour', null=True)),
            ],
            options={
                'db_table': 'teacher',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('studentid', models.OneToOneField(db_column='studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.student')),
                ('booktime', models.DateTimeField(db_column='bookTime')),
                ('bookplace', models.CharField(db_column='bookPlace', max_length=30)),
                ('bookdescription', models.CharField(blank=True, db_column='bookDescription', max_length=100, null=True)),
                ('booksuccess', models.TextField(db_column='bookSuccess')),
            ],
            options={
                'db_table': 'booking',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Coursereview',
            fields=[
                ('courseid', models.OneToOneField(db_column='courseID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.course')),
                ('reviewreason', models.CharField(blank=True, db_column='reviewReason', max_length=100, null=True)),
                ('reviewstate', models.CharField(db_column='reviewState', max_length=10)),
            ],
            options={
                'db_table': 'coursereview',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studentattend',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.activity')),
            ],
            options={
                'db_table': 'studentattend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studenttocoursecomment',
            fields=[
                ('studentid', models.OneToOneField(db_column='studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.student')),
                ('s2cstar', models.IntegerField(blank=True, db_column='s2cStar', null=True)),
                ('s2ccomment', models.CharField(blank=True, db_column='s2cComment', max_length=100, null=True)),
                ('s2ccommenttime', models.DateTimeField(blank=True, db_column='s2cCommentTime', null=True)),
            ],
            options={
                'db_table': 'studenttocoursecomment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studenttoteachercomment',
            fields=[
                ('studentid', models.OneToOneField(db_column='studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.student')),
                ('s2tstar', models.IntegerField(db_column='s2tStar')),
                ('s2tcomment', models.CharField(blank=True, db_column='s2tComment', max_length=100, null=True)),
                ('s2tcommenttime', models.DateTimeField(db_column='s2tCommentTime')),
            ],
            options={
                'db_table': 'studenttoteachercomment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Studyingat',
            fields=[
                ('studentid', models.OneToOneField(db_column='studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.student')),
            ],
            options={
                'db_table': 'studyingat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teach',
            fields=[
                ('teacherid', models.OneToOneField(db_column='teacherID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.teacher')),
            ],
            options={
                'db_table': 'teach',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teacherattend',
            fields=[
                ('activityid', models.OneToOneField(db_column='activityID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.activity')),
            ],
            options={
                'db_table': 'teacherattend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Teachertostudentcomment',
            fields=[
                ('studentid', models.OneToOneField(db_column='studentID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='index.student')),
                ('t2sstar', models.IntegerField(db_column='t2sStar')),
                ('t2scomment', models.CharField(blank=True, db_column='t2sComment', max_length=100, null=True)),
                ('t2scommenttime', models.DateTimeField(db_column='t2sCommentTime')),
            ],
            options={
                'db_table': 'teachertostudentcomment',
                'managed': False,
            },
        ),
    ]
